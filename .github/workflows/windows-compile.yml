name: 'RGG Save Cryptor'

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  yakuza_6:
    runs-on: windows-2019
    strategy:
      matrix:
        compiler: [ clang ]
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Build Y6 executables
        uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
      - run: pacman --noconfirm -S make mingw-w64-x86_64-clang
      - run: ${{ matrix.compiler }} --version
      - run: ${{ matrix.compiler }} y6_decrypt.c -o y6_decrypt.exe
      - run: ${{ matrix.compiler }} y6_encrypt.c -o y6_encrypt.exe
      - uses: actions/upload-artifact@v3
        with:
          name: y6_cryptor
          path: ./*.exe
  judgment:
    runs-on: windows-2019
    strategy:
      matrix:
        compiler: [ clang ]
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Build JE executables
        uses: msys2/setup-msys2@v2
      - uses: actions/checkout@v3
      - run: pacman --noconfirm -S make mingw-w64-x86_64-clang
      - run: ${{ matrix.compiler }} --version
      - run: ${{ matrix.compiler }} je_decrypt.c -o je_decrypt.exe
      - run: ${{ matrix.compiler }} je_encrypt.c -o je_encrypt.exe
      - uses: actions/upload-artifact@v3
        with:
          name: je_cryptor
          path: ./*.exe
  lost_judgment:
    runs-on: windows-2019
    strategy:
      matrix:
        compiler: [ clang ]
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Build LJ executables
        uses: msys2/setup-msys2@v2
      - uses: actions/checkout@v3
      - run: pacman --noconfirm -S make mingw-w64-x86_64-clang zip
      - run: ${{ matrix.compiler }} --version
      - run: ${{ matrix.compiler }} lj_decrypt.c -o lj_decrypt.exe
      - run: ${{ matrix.compiler }} lj_encrypt.c -o lj_encrypt.exe
      - uses: actions/upload-artifact@v3
        with:
          name: lj_cryptor
          path: ./*.exe
  ishin:
    runs-on: windows-2019
    strategy:
      matrix:
        compiler: [ clang ]
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Build LJ executables
        uses: msys2/setup-msys2@v2
      - uses: actions/checkout@v3
      - run: pacman --noconfirm -S make mingw-w64-x86_64-clang zip
      - run: ${{ matrix.compiler }} --version
      - run: ${{ matrix.compiler }} is_decrypt.c -o is_decrypt.exe
      - run: ${{ matrix.compiler }} is_encrypt.c -o is_encrypt.exe
      - uses: actions/upload-artifact@v3
        with:
          name: is_cryptor
          path: ./*.exe
  y7_gog:
    runs-on: windows-2019
    strategy:
      matrix:
        compiler: [ clang ]
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Build Y7 GOG executables
        uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
      - run: pacman --noconfirm -S make mingw-w64-x86_64-clang
      - run: ${{ matrix.compiler }} --version
      - run: ${{ matrix.compiler }} y7_gog_decrypt.c -o y7_gog_decrypt.exe
      - run: ${{ matrix.compiler }} y7_gog_encrypt.c -o y7_gog_encrypt.exe
      - uses: actions/upload-artifact@v3
        with:
          name: y7_gog_cryptor
          path: ./*.exe
